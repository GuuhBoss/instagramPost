{"ast":null,"code":"var _jsxFileName = \"/Users/mamenko/inky-doodle/src/components/RightParents.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport InkyDoodle from \"./InkyDoodle\";\n\nconst RightParents = props => {\n  const {\n    parentInkyDoodles,\n    rightTreeLeftParent,\n    rightTreeRightParent,\n    changeRightTreeLeftParent,\n    changeRightTreeRightParent,\n    changeRightGen2,\n    changeRightGen2Loading,\n    randomizing,\n    changeRandomizing\n  } = props;\n  const parentInkyDoodlesQuery = `\n    query {\n        inkyDoodleCollection(where: {generation_in: 2, parents_contains_all: [${rightTreeLeftParent.label ? JSON.stringify(rightTreeLeftParent.label) : null}, ${rightTreeRightParent.label ? JSON.stringify(rightTreeRightParent.label) : null}]}) {\n            items {\n                generation\n                name\n                parents\n                image {\n                    url\n                }\n            }\n        }\n    }\n`;\n  useEffect(() => {\n    const getGen2Function = async () => {\n      changeRightGen2Loading(true);\n      const response = await axios({\n        url: `https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_SPACE_ID}`,\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_ACCESS_TOKEN}`\n        },\n        data: {\n          query: parentInkyDoodlesQuery\n        }\n      }).then(res => {\n        return res.data;\n      }).then(({\n        data,\n        errors\n      }) => {\n        changeRightGen2Loading(false);\n\n        if (errors) {\n          console.error(errors);\n        }\n\n        changeRightGen2(data.inkyDoodleCollection.items[0]);\n      });\n      return response;\n    };\n\n    if (rightTreeLeftParent) {\n      if (rightTreeRightParent) {\n        if (rightTreeLeftParent.name && rightTreeRightParent.name) {\n          if (JSON.stringify(rightTreeLeftParent.name) === JSON.stringify(rightTreeRightParent.name)) {\n            changeRightGen2(rightTreeLeftParent);\n          } else {\n            getGen2Function().then(res => res);\n          }\n        } else {\n          if (JSON.stringify(rightTreeLeftParent.label) === JSON.stringify(rightTreeRightParent.label)) {\n            changeRightGen2(rightTreeLeftParent);\n          } else {\n            getGen2Function().then(res => res);\n          }\n        }\n      }\n    }\n  }, [rightTreeLeftParent, rightTreeRightParent, parentInkyDoodlesQuery, changeRightGen2, changeRightGen2Loading]);\n  useEffect(() => {\n    if (rightTreeLeftParent || rightTreeRightParent) {\n      const listenForMenu = setInterval(() => {\n        [...document.getElementsByClassName(\"left_parents\")].forEach(item => {\n          if (item) {\n            if (item.childNodes) {\n              if (item.childNodes[2]) {\n                if (item.childNodes[2].firstChild) {\n                  if (item.childNodes[2].firstChild.classList.value.includes(\"MenuList\") || item.childNodes[2].firstChild.classList.value.includes(\"menu\") || item.childNodes[2].firstChild.classList.value.includes(\"css-1tci6j0\")) {\n                    item.childNodes[2].firstChild.childNodes.forEach(x => {\n                      if (JSON.stringify(x.textContent) === JSON.stringify(rightTreeLeftParent.label) || JSON.stringify(x.textContent) === JSON.stringify(rightTreeRightParent.label)) {\n                        const relevantParent = parentInkyDoodles.filter(parent => JSON.stringify(x.textContent) === JSON.stringify(parent.name));\n\n                        if (relevantParent) {\n                          if (relevantParent.length > 0) {\n                            x.style.backgroundColor = `${relevantParent[0].color}77`;\n                          }\n                        }\n                      } else {\n                        x.style.backgroundColor = \"#FFF\";\n                      }\n                    });\n                  }\n                }\n              }\n            }\n          }\n        });\n      }, 100);\n      return () => {\n        clearInterval(listenForMenu);\n      };\n    }\n  }, [rightTreeLeftParent, rightTreeRightParent, parentInkyDoodles]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InkyDoodle, {\n    parentInkyDoodles: parentInkyDoodles,\n    changeRightTreeLeftParent: changeRightTreeLeftParent,\n    rightLeft: true,\n    rightTreeRightParent: rightTreeRightParent,\n    rightTreeLeftParent: rightTreeLeftParent,\n    randomizing: randomizing,\n    changeRandomizing: changeRandomizing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InkyDoodle, {\n    parentInkyDoodles: parentInkyDoodles,\n    changeRightTreeRightParent: changeRightTreeRightParent,\n    rightRight: true,\n    rightTreeRightParent: rightTreeRightParent,\n    rightTreeLeftParent: rightTreeLeftParent,\n    randomizing: randomizing,\n    changeRandomizing: changeRandomizing,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RightParents;","map":{"version":3,"sources":["/Users/mamenko/inky-doodle/src/components/RightParents.js"],"names":["React","useEffect","axios","InkyDoodle","RightParents","props","parentInkyDoodles","rightTreeLeftParent","rightTreeRightParent","changeRightTreeLeftParent","changeRightTreeRightParent","changeRightGen2","changeRightGen2Loading","randomizing","changeRandomizing","parentInkyDoodlesQuery","label","JSON","stringify","getGen2Function","response","url","process","env","REACT_APP_SPACE_ID","method","headers","Authorization","REACT_APP_ACCESS_TOKEN","data","query","then","res","errors","console","error","inkyDoodleCollection","items","name","listenForMenu","setInterval","document","getElementsByClassName","forEach","item","childNodes","firstChild","classList","value","includes","x","textContent","relevantParent","filter","parent","length","style","backgroundColor","color","clearInterval"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport InkyDoodle from \"./InkyDoodle\";\n\nconst RightParents = (props) => {\n  const {\n    parentInkyDoodles,\n    rightTreeLeftParent,\n    rightTreeRightParent,\n    changeRightTreeLeftParent,\n    changeRightTreeRightParent,\n    changeRightGen2,\n    changeRightGen2Loading,\n    randomizing,\n    changeRandomizing,\n  } = props;\n\n  const parentInkyDoodlesQuery = `\n    query {\n        inkyDoodleCollection(where: {generation_in: 2, parents_contains_all: [${\n          rightTreeLeftParent.label\n            ? JSON.stringify(rightTreeLeftParent.label)\n            : null\n        }, ${\n    rightTreeRightParent.label\n      ? JSON.stringify(rightTreeRightParent.label)\n      : null\n  }]}) {\n            items {\n                generation\n                name\n                parents\n                image {\n                    url\n                }\n            }\n        }\n    }\n`;\n\n  useEffect(() => {\n    const getGen2Function = async () => {\n      changeRightGen2Loading(true);\n\n      const response = await axios({\n        url: `https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_SPACE_ID}`,\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_ACCESS_TOKEN}`,\n        },\n        data: {\n          query: parentInkyDoodlesQuery,\n        },\n      })\n        .then((res) => {\n          return res.data;\n        })\n        .then(({ data, errors }) => {\n          changeRightGen2Loading(false);\n\n          if (errors) {\n            console.error(errors);\n          }\n\n          changeRightGen2(data.inkyDoodleCollection.items[0]);\n        });\n\n      return response;\n    };\n\n    if (rightTreeLeftParent) {\n      if (rightTreeRightParent) {\n        if (rightTreeLeftParent.name && rightTreeRightParent.name) {\n          if (\n            JSON.stringify(rightTreeLeftParent.name) ===\n            JSON.stringify(rightTreeRightParent.name)\n          ) {\n            changeRightGen2(rightTreeLeftParent);\n          } else {\n            getGen2Function().then((res) => res);\n          }\n        } else {\n          if (\n            JSON.stringify(rightTreeLeftParent.label) ===\n            JSON.stringify(rightTreeRightParent.label)\n          ) {\n            changeRightGen2(rightTreeLeftParent);\n          } else {\n            getGen2Function().then((res) => res);\n          }\n        }\n      }\n    }\n  }, [\n    rightTreeLeftParent,\n    rightTreeRightParent,\n    parentInkyDoodlesQuery,\n    changeRightGen2,\n    changeRightGen2Loading,\n  ]);\n\n  useEffect(() => {\n    if (rightTreeLeftParent || rightTreeRightParent) {\n      const listenForMenu = setInterval(() => {\n        [...document.getElementsByClassName(\"left_parents\")].forEach((item) => {\n          if (item) {\n            if (item.childNodes) {\n              if (item.childNodes[2]) {\n                if (item.childNodes[2].firstChild) {\n                  if (\n                    item.childNodes[2].firstChild.classList.value.includes(\n                      \"MenuList\"\n                    ) ||\n                    item.childNodes[2].firstChild.classList.value.includes(\n                      \"menu\"\n                    ) ||\n                    item.childNodes[2].firstChild.classList.value.includes(\n                      \"css-1tci6j0\"\n                    )\n                  ) {\n                    item.childNodes[2].firstChild.childNodes.forEach((x) => {\n                      if (\n                        JSON.stringify(x.textContent) ===\n                          JSON.stringify(rightTreeLeftParent.label) ||\n                        JSON.stringify(x.textContent) ===\n                          JSON.stringify(rightTreeRightParent.label)\n                      ) {\n                        const relevantParent = parentInkyDoodles.filter(\n                          (parent) =>\n                            JSON.stringify(x.textContent) ===\n                            JSON.stringify(parent.name)\n                        );\n\n                        if (relevantParent) {\n                          if (relevantParent.length > 0) {\n                            x.style.backgroundColor = `${relevantParent[0].color}77`;\n                          }\n                        }\n                      } else {\n                        x.style.backgroundColor = \"#FFF\";\n                      }\n                    });\n                  }\n                }\n              }\n            }\n          }\n        });\n      }, 100);\n\n      return () => {\n        clearInterval(listenForMenu);\n      };\n    }\n  }, [rightTreeLeftParent, rightTreeRightParent, parentInkyDoodles]);\n\n  return (\n    <>\n      <InkyDoodle\n        parentInkyDoodles={parentInkyDoodles}\n        changeRightTreeLeftParent={changeRightTreeLeftParent}\n        rightLeft\n        rightTreeRightParent={rightTreeRightParent}\n        rightTreeLeftParent={rightTreeLeftParent}\n        randomizing={randomizing}\n        changeRandomizing={changeRandomizing}\n      />\n      <InkyDoodle\n        parentInkyDoodles={parentInkyDoodles}\n        changeRightTreeRightParent={changeRightTreeRightParent}\n        rightRight\n        rightTreeRightParent={rightTreeRightParent}\n        rightTreeLeftParent={rightTreeLeftParent}\n        randomizing={randomizing}\n        changeRandomizing={changeRandomizing}\n      />\n    </>\n  );\n};\n\nexport default RightParents;\n"]},"metadata":{},"sourceType":"module"}