{"ast":null,"code":"var _jsxFileName = \"/Users/mamenko/inky-doodle/src/components/RightParents.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport InkyDoodle from \"./InkyDoodle\";\n\nconst RightParents = props => {\n  const {\n    parentInkyDoodles,\n    rightTreeLeftParent,\n    changeRightTreeLeftParent,\n    rightTreeRightParent,\n    changeRightTreeRightParent,\n    changeRightGen2,\n    changeRightGen2Loading\n  } = props;\n  const parentInkyDoodlesQuery = `\n    query {\n        inkyDoodleCollection(where: {generation_in: 2, parents_contains_all: [${rightTreeLeftParent.label ? JSON.stringify(rightTreeLeftParent.label) : null}, ${rightTreeRightParent.label ? JSON.stringify(rightTreeRightParent.label) : null}]}) {\n            items {\n                generation\n                name\n                parents\n                image {\n                    url\n                }\n            }\n        }\n    }\n`;\n  useEffect(() => {\n    const getGen2Function = () => {\n      changeRightGen2Loading(true);\n      axios({\n        url: `https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_SPACE_ID}`,\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_ACCESS_TOKEN}`\n        },\n        data: {\n          query: parentInkyDoodlesQuery\n        }\n      }).then(res => {\n        return res.data;\n      }).then(({\n        data,\n        errors\n      }) => {\n        changeRightGen2Loading(false);\n\n        if (errors) {\n          console.error(errors);\n        }\n\n        changeRightGen2(data.inkyDoodleCollection.items[0]);\n      });\n    };\n\n    if (rightTreeLeftParent) {\n      if (rightTreeRightParent) {\n        if (rightTreeLeftParent.name && rightTreeRightParent.name) {\n          if (JSON.stringify(rightTreeLeftParent.name) === JSON.stringify(rightTreeRightParent.name)) {\n            changeRightGen2(rightTreeLeftParent);\n          } else {\n            getGen2Function();\n          }\n        } else {\n          if (JSON.stringify(rightTreeLeftParent.label) === JSON.stringify(rightTreeRightParent.label)) {\n            changeRightGen2(rightTreeLeftParent);\n          } else {\n            getGen2Function();\n          }\n        }\n      }\n    }\n  }, [rightTreeLeftParent, rightTreeRightParent, parentInkyDoodlesQuery, changeRightGen2, changeRightGen2Loading]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InkyDoodle, {\n    parentInkyDoodles: parentInkyDoodles,\n    rightTreeLeftParent: rightTreeLeftParent,\n    changeRightTreeLeftParent: changeRightTreeLeftParent,\n    rightLeft: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InkyDoodle, {\n    parentInkyDoodles: parentInkyDoodles,\n    rightTreeRightParent: rightTreeRightParent,\n    changeRightTreeRightParent: changeRightTreeRightParent,\n    rightRight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default RightParents;","map":{"version":3,"sources":["/Users/mamenko/inky-doodle/src/components/RightParents.js"],"names":["React","useEffect","axios","InkyDoodle","RightParents","props","parentInkyDoodles","rightTreeLeftParent","changeRightTreeLeftParent","rightTreeRightParent","changeRightTreeRightParent","changeRightGen2","changeRightGen2Loading","parentInkyDoodlesQuery","label","JSON","stringify","getGen2Function","url","process","env","REACT_APP_SPACE_ID","method","headers","Authorization","REACT_APP_ACCESS_TOKEN","data","query","then","res","errors","console","error","inkyDoodleCollection","items","name"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport InkyDoodle from \"./InkyDoodle\";\n\nconst RightParents = (props) => {\n  const {\n    parentInkyDoodles,\n    rightTreeLeftParent,\n    changeRightTreeLeftParent,\n    rightTreeRightParent,\n    changeRightTreeRightParent,\n    changeRightGen2,\n    changeRightGen2Loading,\n  } = props;\n\n  const parentInkyDoodlesQuery = `\n    query {\n        inkyDoodleCollection(where: {generation_in: 2, parents_contains_all: [${\n          rightTreeLeftParent.label\n            ? JSON.stringify(rightTreeLeftParent.label)\n            : null\n        }, ${\n    rightTreeRightParent.label\n      ? JSON.stringify(rightTreeRightParent.label)\n      : null\n  }]}) {\n            items {\n                generation\n                name\n                parents\n                image {\n                    url\n                }\n            }\n        }\n    }\n`;\n\n  useEffect(() => {\n    const getGen2Function = () => {\n      changeRightGen2Loading(true);\n\n      axios({\n        url: `https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_SPACE_ID}`,\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_ACCESS_TOKEN}`,\n        },\n        data: {\n          query: parentInkyDoodlesQuery,\n        },\n      })\n        .then((res) => {\n          return res.data;\n        })\n        .then(({ data, errors }) => {\n          changeRightGen2Loading(false);\n\n          if (errors) {\n            console.error(errors);\n          }\n\n          changeRightGen2(data.inkyDoodleCollection.items[0]);\n        });\n    };\n\n    if (rightTreeLeftParent) {\n      if (rightTreeRightParent) {\n        if (rightTreeLeftParent.name && rightTreeRightParent.name) {\n          if (\n            JSON.stringify(rightTreeLeftParent.name) ===\n            JSON.stringify(rightTreeRightParent.name)\n          ) {\n            changeRightGen2(rightTreeLeftParent);\n          } else {\n            getGen2Function();\n          }\n        } else {\n          if (\n            JSON.stringify(rightTreeLeftParent.label) ===\n            JSON.stringify(rightTreeRightParent.label)\n          ) {\n            changeRightGen2(rightTreeLeftParent);\n          } else {\n            getGen2Function();\n          }\n        }\n      }\n    }\n  }, [\n    rightTreeLeftParent,\n    rightTreeRightParent,\n    parentInkyDoodlesQuery,\n    changeRightGen2,\n    changeRightGen2Loading,\n  ]);\n\n  return (\n    <>\n      <InkyDoodle\n        parentInkyDoodles={parentInkyDoodles}\n        rightTreeLeftParent={rightTreeLeftParent}\n        changeRightTreeLeftParent={changeRightTreeLeftParent}\n        rightLeft\n      />\n      <InkyDoodle\n        parentInkyDoodles={parentInkyDoodles}\n        rightTreeRightParent={rightTreeRightParent}\n        changeRightTreeRightParent={changeRightTreeRightParent}\n        rightRight\n      />\n    </>\n  );\n};\n\nexport default RightParents;\n"]},"metadata":{},"sourceType":"module"}