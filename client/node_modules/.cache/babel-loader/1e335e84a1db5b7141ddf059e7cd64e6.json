{"ast":null,"code":"var _jsxFileName = \"/Users/mamenko/inky-doodle/src/components/LeftParents.js\";\nimport React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport InkyDoodle from \"./InkyDoodle\";\n\nconst LeftParents = props => {\n  const {\n    parentInkyDoodles,\n    leftTreeLeftParent,\n    changeLeftTreeLeftParent,\n    leftTreeRightParent,\n    changeLeftTreeRightParent,\n    changeLeftGen2,\n    changeLeftGen2Loading\n  } = props;\n  const parentInkyDoodlesQuery = `\n    query {\n        inkyDoodleCollection(where: {generation_in: 2, parents_contains_all: [${leftTreeLeftParent.label ? JSON.stringify(leftTreeLeftParent.label) : null}, ${leftTreeRightParent.label ? JSON.stringify(leftTreeRightParent.label) : null}]}) {\n            items {\n                generation\n                name\n                parents\n                image {\n                    url\n                }\n            }\n        }\n    }\n`;\n  useEffect(() => {\n    const getGen2Function = async () => {\n      changeLeftGen2Loading(true);\n      const response = await axios({\n        url: `https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_SPACE_ID}`,\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_ACCESS_TOKEN}`\n        },\n        data: {\n          query: parentInkyDoodlesQuery\n        }\n      }).then(res => {\n        return res.data;\n      }).then(({\n        data,\n        errors\n      }) => {\n        changeLeftGen2Loading(false);\n\n        if (errors) {\n          console.error(errors);\n        }\n\n        changeLeftGen2(data.inkyDoodleCollection.items[0]);\n      });\n      return response;\n    };\n\n    if (leftTreeLeftParent) {\n      if (leftTreeRightParent) {\n        if (leftTreeLeftParent.name && leftTreeRightParent.name) {\n          if (JSON.stringify(leftTreeLeftParent.name) === JSON.stringify(leftTreeRightParent.name)) {\n            changeLeftGen2(leftTreeLeftParent);\n          } else {\n            getGen2Function().then(res => res);\n          }\n        } else {\n          if (JSON.stringify(leftTreeLeftParent.label) === JSON.stringify(leftTreeRightParent.label)) {\n            changeLeftGen2(leftTreeLeftParent);\n          } else {\n            getGen2Function().then(res => res);\n          }\n        }\n      }\n    }\n  }, [leftTreeLeftParent, leftTreeRightParent, parentInkyDoodlesQuery, changeLeftGen2, changeLeftGen2Loading]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InkyDoodle, {\n    parentInkyDoodles: parentInkyDoodles,\n    leftTreeLeftParent: leftTreeLeftParent,\n    changeLeftTreeLeftParent: changeLeftTreeLeftParent,\n    leftLeft: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InkyDoodle, {\n    parentInkyDoodles: parentInkyDoodles,\n    leftTreeRightParent: leftTreeRightParent,\n    changeLeftTreeRightParent: changeLeftTreeRightParent,\n    leftRight: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LeftParents;","map":{"version":3,"sources":["/Users/mamenko/inky-doodle/src/components/LeftParents.js"],"names":["React","useEffect","axios","InkyDoodle","LeftParents","props","parentInkyDoodles","leftTreeLeftParent","changeLeftTreeLeftParent","leftTreeRightParent","changeLeftTreeRightParent","changeLeftGen2","changeLeftGen2Loading","parentInkyDoodlesQuery","label","JSON","stringify","getGen2Function","response","url","process","env","REACT_APP_SPACE_ID","method","headers","Authorization","REACT_APP_ACCESS_TOKEN","data","query","then","res","errors","console","error","inkyDoodleCollection","items","name"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\nimport axios from \"axios\";\nimport InkyDoodle from \"./InkyDoodle\";\n\nconst LeftParents = (props) => {\n  const {\n    parentInkyDoodles,\n    leftTreeLeftParent,\n    changeLeftTreeLeftParent,\n    leftTreeRightParent,\n    changeLeftTreeRightParent,\n    changeLeftGen2,\n    changeLeftGen2Loading,\n  } = props;\n\n  const parentInkyDoodlesQuery = `\n    query {\n        inkyDoodleCollection(where: {generation_in: 2, parents_contains_all: [${\n          leftTreeLeftParent.label\n            ? JSON.stringify(leftTreeLeftParent.label)\n            : null\n        }, ${\n    leftTreeRightParent.label ? JSON.stringify(leftTreeRightParent.label) : null\n  }]}) {\n            items {\n                generation\n                name\n                parents\n                image {\n                    url\n                }\n            }\n        }\n    }\n`;\n\n  useEffect(() => {\n    const getGen2Function = async () => {\n      changeLeftGen2Loading(true);\n\n      const response = await axios({\n        url: `https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_SPACE_ID}`,\n        method: \"post\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Authorization: `Bearer ${process.env.REACT_APP_ACCESS_TOKEN}`,\n        },\n        data: {\n          query: parentInkyDoodlesQuery,\n        },\n      })\n        .then((res) => {\n          return res.data;\n        })\n        .then(({ data, errors }) => {\n          changeLeftGen2Loading(false);\n\n          if (errors) {\n            console.error(errors);\n          }\n\n          changeLeftGen2(data.inkyDoodleCollection.items[0]);\n        });\n\n      return response;\n    };\n\n    if (leftTreeLeftParent) {\n      if (leftTreeRightParent) {\n        if (leftTreeLeftParent.name && leftTreeRightParent.name) {\n          if (\n            JSON.stringify(leftTreeLeftParent.name) ===\n            JSON.stringify(leftTreeRightParent.name)\n          ) {\n            changeLeftGen2(leftTreeLeftParent);\n          } else {\n            getGen2Function().then((res) => res);\n          }\n        } else {\n          if (\n            JSON.stringify(leftTreeLeftParent.label) ===\n            JSON.stringify(leftTreeRightParent.label)\n          ) {\n            changeLeftGen2(leftTreeLeftParent);\n          } else {\n            getGen2Function().then((res) => res);\n          }\n        }\n      }\n    }\n  }, [\n    leftTreeLeftParent,\n    leftTreeRightParent,\n    parentInkyDoodlesQuery,\n    changeLeftGen2,\n    changeLeftGen2Loading,\n  ]);\n\n  return (\n    <>\n      <InkyDoodle\n        parentInkyDoodles={parentInkyDoodles}\n        leftTreeLeftParent={leftTreeLeftParent}\n        changeLeftTreeLeftParent={changeLeftTreeLeftParent}\n        leftLeft\n      />\n      <InkyDoodle\n        parentInkyDoodles={parentInkyDoodles}\n        leftTreeRightParent={leftTreeRightParent}\n        changeLeftTreeRightParent={changeLeftTreeRightParent}\n        leftRight\n      />\n    </>\n  );\n};\n\nexport default LeftParents;\n"]},"metadata":{},"sourceType":"module"}