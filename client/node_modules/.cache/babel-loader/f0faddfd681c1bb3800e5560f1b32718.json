{"ast":null,"code":"var _jsxFileName = \"/Users/mamenko/inky-doodle/src/components/LeftParents.js\";\nimport React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InkyDoodle from \"./InkyDoodle\";\n\nconst LeftParents = props => {\n  const {\n    parentInkyDoodles\n  } = props;\n  const [leftChild, changeLeftChild] = useState(\"\");\n  const [rightChild, changeRightChild] = useState(\"\");\n  const [secondGenChild, changeSecondGenChild] = useState({});\n  const parentInkyDoodlesQuery = `\n    query {\n        inkyDoodleCollection(where: {generation_in: 2, parents_contains_all: [${leftChild.name}, ${rightChild.name}]}) {\n            items {\n                generation\n                name\n                parents\n            }\n        }\n    }\n`;\n  useEffect(() => {\n    if (leftChild) {\n      if (rightChild) {\n        axios({\n          url: `https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_SPACE_ID}`,\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_ACCESS_TOKEN}`\n          },\n          data: {\n            query: parentInkyDoodlesQuery\n          }\n        }).then(res => res.data).then(({\n          data,\n          errors\n        }) => {\n          if (errors) {\n            console.error(errors);\n          }\n\n          changeSecondGenChild(data.inkyDoodleCollection.items);\n        });\n      }\n    }\n  }, [leftChild, rightChild, parentInkyDoodlesQuery]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(InkyDoodle, {\n    parentInkyDoodles: parentInkyDoodles,\n    leftChild: leftChild,\n    changeLeftChild: changeLeftChild,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(InkyDoodle, {\n    parentInkyDoodles: parentInkyDoodles,\n    rightChild: leftChild,\n    changeRightChild: changeLeftChild,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default LeftParents;","map":{"version":3,"sources":["/Users/mamenko/inky-doodle/src/components/LeftParents.js"],"names":["React","useState","useEffect","axios","InkyDoodle","LeftParents","props","parentInkyDoodles","leftChild","changeLeftChild","rightChild","changeRightChild","secondGenChild","changeSecondGenChild","parentInkyDoodlesQuery","name","url","process","env","REACT_APP_SPACE_ID","method","headers","Authorization","REACT_APP_ACCESS_TOKEN","data","query","then","res","errors","console","error","inkyDoodleCollection","items"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;;AAEA,MAAMC,WAAW,GAAIC,KAAD,IAAW;AAC7B,QAAM;AAAEC,IAAAA;AAAF,MAAwBD,KAA9B;AAEA,QAAM,CAACE,SAAD,EAAYC,eAAZ,IAA+BR,QAAQ,CAAC,EAAD,CAA7C;AACA,QAAM,CAACS,UAAD,EAAaC,gBAAb,IAAiCV,QAAQ,CAAC,EAAD,CAA/C;AAEA,QAAM,CAACW,cAAD,EAAiBC,oBAAjB,IAAyCZ,QAAQ,CAAC,EAAD,CAAvD;AAEA,QAAMa,sBAAsB,GAAI;AAClC;AACA,gFAAgFN,SAAS,CAACO,IAAK,KAAIL,UAAU,CAACK,IAAK;AACnH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAVE;AAYAb,EAAAA,SAAS,CAAC,MAAM;AACd,QAAIM,SAAJ,EAAe;AACb,UAAIE,UAAJ,EAAgB;AACdP,QAAAA,KAAK,CAAC;AACJa,UAAAA,GAAG,EAAG,oDAAmDC,OAAO,CAACC,GAAR,CAAYC,kBAAmB,EADpF;AAEJC,UAAAA,MAAM,EAAE,MAFJ;AAGJC,UAAAA,OAAO,EAAE;AACP,4BAAgB,kBADT;AAEPC,YAAAA,aAAa,EAAG,UAASL,OAAO,CAACC,GAAR,CAAYK,sBAAuB;AAFrD,WAHL;AAOJC,UAAAA,IAAI,EAAE;AACJC,YAAAA,KAAK,EAAEX;AADH;AAPF,SAAD,CAAL,CAWGY,IAXH,CAWSC,GAAD,IAASA,GAAG,CAACH,IAXrB,EAYGE,IAZH,CAYQ,CAAC;AAAEF,UAAAA,IAAF;AAAQI,UAAAA;AAAR,SAAD,KAAsB;AAC1B,cAAIA,MAAJ,EAAY;AACVC,YAAAA,OAAO,CAACC,KAAR,CAAcF,MAAd;AACD;;AAEDf,UAAAA,oBAAoB,CAACW,IAAI,CAACO,oBAAL,CAA0BC,KAA3B,CAApB;AACD,SAlBH;AAmBD;AACF;AACF,GAxBQ,EAwBN,CAACxB,SAAD,EAAYE,UAAZ,EAAwBI,sBAAxB,CAxBM,CAAT;AA0BA,sBACE,uDACE,oBAAC,UAAD;AACE,IAAA,iBAAiB,EAAEP,iBADrB;AAEE,IAAA,SAAS,EAAEC,SAFb;AAGE,IAAA,eAAe,EAAEC,eAHnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAME,oBAAC,UAAD;AACE,IAAA,iBAAiB,EAAEF,iBADrB;AAEE,IAAA,UAAU,EAAEC,SAFd;AAGE,IAAA,gBAAgB,EAAEC,eAHpB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAcD,CA5DD;;AA8DA,eAAeJ,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport axios from \"axios\";\nimport InkyDoodle from \"./InkyDoodle\";\n\nconst LeftParents = (props) => {\n  const { parentInkyDoodles } = props;\n\n  const [leftChild, changeLeftChild] = useState(\"\");\n  const [rightChild, changeRightChild] = useState(\"\");\n\n  const [secondGenChild, changeSecondGenChild] = useState({});\n\n  const parentInkyDoodlesQuery = `\n    query {\n        inkyDoodleCollection(where: {generation_in: 2, parents_contains_all: [${leftChild.name}, ${rightChild.name}]}) {\n            items {\n                generation\n                name\n                parents\n            }\n        }\n    }\n`;\n\n  useEffect(() => {\n    if (leftChild) {\n      if (rightChild) {\n        axios({\n          url: `https://graphql.contentful.com/content/v1/spaces/${process.env.REACT_APP_SPACE_ID}`,\n          method: \"post\",\n          headers: {\n            \"Content-Type\": \"application/json\",\n            Authorization: `Bearer ${process.env.REACT_APP_ACCESS_TOKEN}`,\n          },\n          data: {\n            query: parentInkyDoodlesQuery,\n          },\n        })\n          .then((res) => res.data)\n          .then(({ data, errors }) => {\n            if (errors) {\n              console.error(errors);\n            }\n\n            changeSecondGenChild(data.inkyDoodleCollection.items);\n          });\n      }\n    }\n  }, [leftChild, rightChild, parentInkyDoodlesQuery]);\n\n  return (\n    <>\n      <InkyDoodle\n        parentInkyDoodles={parentInkyDoodles}\n        leftChild={leftChild}\n        changeLeftChild={changeLeftChild}\n      />\n      <InkyDoodle\n        parentInkyDoodles={parentInkyDoodles}\n        rightChild={leftChild}\n        changeRightChild={changeLeftChild}\n      />\n    </>\n  );\n};\n\nexport default LeftParents;\n"]},"metadata":{},"sourceType":"module"}